// ======================================================================
// File: multi-asm.S
// ======================================================================

// ======================================================================
// unsigned int multi_asm(unsigned int i, unsigned int j);

.globl multi_asm
multi_asm:
        mov r2, #0
.L0:
        cmp r1, #0
        beq .L1
        add r2, r2, r0
        sub r1, r1, #1
        b .L0
.L1:
        mov r0, r2
        bx lr

// ===============================

// ======================================================================
// File: fact-asm.S
// ======================================================================

// ======================================================================
// unsigned int fact_asm(vold)

.globl fact_asm
fact_asm:
   push {r4, r5}
   ldr r0, =format0
   bl printf
   ldr r0, =format1
   bl printf
   ldr r0, =format2
   bl printf
   
   mov r4, #0
   mov r5, #1

.L0:
   cmp r4, #0
   beq .L1
   cmp r4, #11
   beq .L2
   mul r5, r5, r4

.L1:
   mov r1, r4
   mov r2, r5
   ldr r0, =format3
   bl printf
   add r4, r4, #1
   b .L0

.L2:
   pop {r4, r5}

   ldr r0, =format4
   bl printf
   
// ======================================================================

format0:
  .asciz "============================================================\n"
format1:
  .asciz "Factorial table\n"
format2:
  .asciz "============================================================\n"
format3:
  .asciz "fact(%d)=%d\n"
format4:
  .asciz "============================================================\n"

// ==================================================