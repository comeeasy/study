<학습 목표>
	- 데이터 구조중 벡터와 리스트구조의 차이를 구분할 수 있다.
	- 데이터 구조 중 데이터 프레임 구조를 이해한다.
	- 그 밖의 R에서 활용 가능한 데이터 구조를 이해한다.
	- 벡터, 리스트, 행렬 구조의 데이터를 다룰 수 있다.

<1. 벡터>
	- 벡터들은 동질적이다.
		한 벡터의 모든 원소는 같은 자료형 또는 같은 모드를 가진다.
	- 벡터는 위치로 인덱싱한다.
		v[2]는 v벡터의 2번째 원소이다.
	- 벡터는 인덱스를 통해 여러개의 원소로 구성된 하위벡터를 return 할 수 있다.
		v[c(2,3)]은 v벡터의 2, 3번째 원소로 구성된 하위벡터이다.
	- 벡터 원소들은 이름을 가질 수 있다.
		
<2. 리스트>
	- 리스트는 이질적이다.
		여러 자료형의 원소들이 포함될 수 있다.
	- 리스트는 위치로 인덱싱한다.
	- 리스트에서 하위 리스트를 추출할 수 있다.

<3. R에서의 자료형태>
	- 숫자
	- 숫자 벡터 
		c(2, 3, 4, 5... )
	- 문자열
	- 문자열 벡터
		c("tom", "hello"..)
	- factor
		factor(c("a", "b", "c"))
	-list
		list("tom", "hello"...)
	- data frame
		data.frame(x=1:3, y=c("tom", "hello","kim))
	-function
		print

<4. Data frame>
	1) 특징
		- 데이터 프레임은 강력하고 유연한 구조이고, SAS의 데이터셋을 모방해서 만들어진다.
		- 데이터 프레임의 리스트의 원소는 벡터 또는 factor이다.
		- vector, factor들은 동일한 길이다.
		- data frame은 표 형태의 구조이며, 각 열은 서로 다른 데이터 형식을 가질 수 있다.
		- 열에는 이름이 있어야한다.

	2) 데이터 프레임의 원소에 대한 접근법
		b[1] : b["empno"]
			b[[i]] ; b[["empno"]]
			b$empno

<5. 그 밖의 데이터 구조들>
	- 단일값 (Scalars)
	- 행렬 (Matrix)	
	- 배열 (Array)
	- 요인 (Factor)

<6. 벡터, 리스트, 행렬 다루기>
	- 행렬은 R에서 차원을 가진 벡터이며, 텍스트 마이닝과 소셜 네트워크 분석등에 활용한다.
	- 재활용 규칙(Recycling Rule)
		: 길이가 서로 다른 두 벡터에 대해 연산을 할 때, R은 짧은 벡터의 처음으로 돌아가
		  연산이 끝날때까지 원소들을 재활용한다.
